{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/observer/array.js","../src/observer/index.js","../src/state.js","../src/compiler/parser.js","../src/compiler/index.js","../src/init.js","../src/index.js"],"sourcesContent":["// 此处放所有的工具方法\n\n\nexport function isObject(obj) {\n    return typeof obj === 'object' && obj !== null\n}","let oldArrayMethods = Array.prototype; // 获取数组原型上的方法\n\n// 创建一个全新的对象 可以找到数组原型上的方法，而且修改对象时不会影响原数组的原型方法\nexport let arrayMethods = Object.create(oldArrayMethods);\n\nlet methods = [ // 这七个方法都可以改变原数组\n    'push',\n    'pop',\n    'shift',\n    'unshift',\n    'sort',\n    'reverse',\n    'splice' \n]\nmethods.forEach(method=>{\n    arrayMethods[method] = function (...args) { // 函数劫持 AOP\n        // 当用户调用数组方法时 会先执行我自己改造的逻辑 在执行数组默认的逻辑\n        const ob = this.__ob__;\n        let result  = oldArrayMethods[method].apply(this,args);\n        let inserted;\n        // push unshift splice 都可以新增属性  （新增的属性可能是一个对象类型）\n        // 内部还对数组中引用类型也做了一次劫持  [].push({name:'zf'})\n        switch (method) {\n            case 'push':\n            case 'unshift':\n                inserted = args\n                break;\n            case 'splice': // 也是新增属性  可以修改 可以删除  [].splice(arr,1,'div')\n                inserted = args.slice(2);\n                break;\n            default:\n                break;\n        }\n        inserted && ob.observeArray(inserted);\n        return result;\n    }\n})\n\n\n\n\n","import {isObject} from '../utils.js';\nimport {arrayMethods} from './array'\n\n// es6的类来实现的\nclass Observer{\n    constructor(data){\n        // 对数组索引进行拦截 性能差而且直接更改索引的方式并不多\n        Object.defineProperty(data,'__ob__',{ // __ob__ 是一个响应式饿表示 对象数组都有\n            enumerable:false, // 不可枚举\n            configurable:false,\n            value:this\n        })\n        // data.__ob__ = this; // 相当于在数据上可以获取到__ob__这个属性 指代的是Observer的实例\n        if(Array.isArray(data)){\n            // vue如何对数组进行处理呢？ 数组用的是重写数组的方法  函数劫持\n            // 改变数组本身的方法我就可以监控到了\n            data.__proto__ = arrayMethods; // 通过原型链 向上查找的方式\n            // [{a:1}]    => arr[0].a = 100\n            this.observeArray(data);\n        }else{\n            this.walk(data); // 可以对数据一步一步的处理\n        }\n    }\n    observeArray(data){\n        for(let i =0 ; i< data.length;i++){\n            observe(data[i]);// 检测数组的对象类型\n        }\n    }\n    walk(data){\n        // 对象的循环   data:{msg:'zf',age:11}\n        Object.keys(data).forEach(key=>{\n            defineReactive(data,key,data[key]);// 定义响应式的数据变化\n        })\n    }\n}\n// vue2 的性能 递归重写get和set  proxy\nfunction defineReactive(data,key,value){\n    observe(value); // 如果传入的值还是一个对象的话 就做递归循环检测\n    Object.defineProperty(data,key,{\n        get(){\n            return value\n        },\n        set(newValue){\n            if(newValue == value) return;\n            observe(newValue); // 监控当前设置的值，有可能用户给了一个新值\n            value = newValue;\n        }\n    })\n}\n\nexport function observe(data){\n    // 对象就是使用defineProperty 来实现响应式原理\n\n    // 如果这个数据不是对象 或者是null 那就不用监控了\n    if(!isObject(data)){\n        return;\n    }\n    if(data.__ob__ instanceof Observer){ // 防止对象被重复观测\n        return ;\n    }\n    \n    // 对数据进行defineProperty\n    return new Observer(data); // 可以看到当前数据是否被观测过\n}","import { observe } from './observer/index.js'\nexport function initState(vm) {\n    const opts = vm.$options;\n    if (opts.props) {\n        initProps(vm);\n    }\n    if (opts.methods) {\n        initMethod(vm);\n    }\n    if (opts.data) {\n        initData(vm);\n    }\n    // computed ... watch\n}\nfunction initProps() {}\nfunction initMethod() {}\nfunction initData(vm) {\n    // 数据响应式原理\n    let data = vm.$options.data; // 用户传入的数据\n    // vm._data 就是检测后的数据了\n    data = vm._data = typeof data === 'function' ? data.call(vm) : data;\n    // 观测数据\n    observe(data); // 观测这个数据\n}","//              字母a-zA-Z_ - . 数组小写字母 大写字母  \nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // 标签名\n// ?:匹配不捕获   <aaa:aaa>\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\n// startTagOpen 可以匹配到开始标签 正则捕获到的内容是 (标签名)\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\n// 闭合标签 </xxxxxxx>  \nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\n// <div aa   =   \"123\"  bb=123  cc='123'\n// 捕获到的是 属性名 和 属性值 arguments[1] || arguments[2] || arguments[2]\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的\n// <div >   <br/>\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的 >\n// 匹配动态变量的  +? 尽可能少匹配\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\n\nexport function parseHTML(html) {\n\n    function start(tagName, attrs) {\n        console.log(tagName,attrs)\n    }\n    function end(tagName) {\n        console.log(tagName)\n    }\n    function chars(text) {\n        console.log(text)\n    }\n    // 根据 html 解析成树结构  </span></div>\n    while (html) {\n        let textEnd = html.indexOf('<');\n        if (textEnd == 0) {\n            const startTageMatch = parseStartTag();\n\n            if (startTageMatch) {\n                // 开始标签\n                start(startTageMatch.tagName,startTageMatch.attrs)\n            }\n            const endTagMatch = html.match(endTag);\n\n            if (endTagMatch) {\n                advance(endTagMatch[0].length);\n                end(endTagMatch[1])\n            }\n            // 结束标签 \n        }\n\n        // 如果不是0 说明是文本\n        let text;\n        if (textEnd > 0) {\n            text = html.substring(0, textEnd); // 是文本就把文本内容进行截取\n            chars(text);\n        }\n        if (text) {\n            advance(text.length); // 删除文本内容\n        }\n    }\n\n    function advance(n) {\n        html = html.substring(n);\n    }\n\n    function parseStartTag() {\n        const start = html.match(startTagOpen); // 匹配开始标签\n        if (start) {\n            const match = {\n                tagName: start[1], // 匹配到的标签名\n                attrs: []\n            }\n            advance(start[0].length);\n            let end, attr;\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n                advance(attr[0].length);\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] })\n            };\n            if (end) {\n                advance(end[0].length);\n                return match;\n            }\n        }\n    }\n\n}","import {parseHTML} from './parser.js'\nexport function compileToFunctions(template){\n    // console.log(template)\n    // 实现模板的编译\n\n    let ast = parseHTML(template)\n\n    // 模板编译原理 \n\n    // 1.先把我们的代码转化成ast语法树 （1）  parser 解析  (正则)\n    // 2.标记静态树  （2） 树得遍历标记 markup\n    // 3.通过ast产生的语法树 生成 代码 =》 render函数  codegen\n}","import { initState } from './state';\nimport {compileToFunctions} from './compiler/index.js'\nexport function initMixin(Vue) {\n    Vue.prototype._init = function(options) {\n        // Vue的内部 $options 就是用户传递的所有参数\n        const vm = this;\n        vm.$options = options; // 用户传入的参数\n        initState(vm); // 初始化状态\n        // 需要通过模板进行渲染\n        if (vm.$options.el) { // 用户传入了el属性\n            vm.$mount(vm.$options.el)\n        }\n    }\n    Vue.prototype.$mount = function (el) { // 可能是字符串 也可以传入一个dom对象\n        const vm = this;\n        el = document.querySelector(el); // 获取el属性\n\n        // 如果同时传入 template 和render  默认会采用render 抛弃template，如果都没传就使用id=\"app\"中的模板\n        const opts = vm.$options;\n\n        if(!opts.render){\n            let template = opts.template;\n            if(!template && el){ // 应该使用外部的模板\n                template = el.outerHTML;\n            }\n            const render = compileToFunctions(template);\n            opts.render = render;\n        }\n        // 走到这里说明不需要编译了 ，因为用户传入的就是 一个render函数\n        \n        opts.render;\n    }\n\n}","import {initMixin} from './init';\nfunction Vue(options){\n    // 内部要进行初始化的操作 \n    this._init(options); // 初始化操作\n}\n\ninitMixin(Vue); // 添加原型的方法\nexport default Vue;"],"names":["isObject","obj","oldArrayMethods","Array","prototype","arrayMethods","Object","create","methods","forEach","method","ob","__ob__","args","result","apply","inserted","slice","observeArray","Observer","data","defineProperty","enumerable","configurable","value","isArray","__proto__","walk","i","length","observe","keys","key","defineReactive","get","set","newValue","initState","vm","opts","$options","props","initData","_data","call","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","start","tagName","attrs","console","log","end","chars","text","textEnd","indexOf","startTageMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","push","name","compileToFunctions","template","ast","initMixin","Vue","_init","options","el","$mount","document","querySelector","render","outerHTML"],"mappings":"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"}